{"version":3,"file":"static/js/557.1bd07a6e.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","redux/contacts/contactsSlice.js","components/ContactsFilter/ContactsFilter.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContact = state => state.contacts.entities;\nexport const getFilterWord = state => state.contacts.filterWord;\nexport const IsLoading = state => state.contacts.isLoading;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 529px;\n\n  background: radial-gradient(\n    95.11% 95.11% at 50% 95.11%,\n    #96e6ff 0%,\n    rgba(186, 234, 250, 0.4) 100%\n  );\n  border: 0.8px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  border-radius: 21px;\n\n  padding-left: 30px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  margin-left: 85px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 29px;\n\n  color: #38005a;\n\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  font-size: 24px;\n  max-width: 366px;\n  height: 39px;\n\n  padding: 0 15px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n\n  max-width: 176px;\n  padding-top: 9px;\n  padding-bottom: 14px;\n  -webkit-text-stroke: 0.6px solid rgba(255, 255, 255, 0.3);\n\n  border-radius: 25px;\n\n  color: #ffffff;\n  background-color: #9567ff;\n\n  border: none;\n\n  &:hover,\n  :focus {\n    background-color: #7d47fc;\n  }\n`;\n\nexport const InputTitle = styled.span`\n  margin-bottom: 14px;\n`;\n","import { useState } from 'react';\nimport { getContact } from 'redux/contacts/contactsSelectors';\nimport { contactsOperations } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonSubmit,\n  Form,\n  Input,\n  InputTitle,\n  Label,\n} from './ContactsForm.styled';\nimport { Notify } from 'notiflix';\n\n//\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = { name, phone: number };\n\n    if (contacts.find(contact => contact.name === name)) {\n      return Notify.warning(`${name} is already in contacts.`);\n    } else {\n      dispatch(contactsOperations.addContacts(newContact));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <InputTitle>Name</InputTitle>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleInputChange}\n          required\n        />\n      </Label>\n      <Label>\n        <InputTitle>Number</InputTitle>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleInputChange}\n          required\n        />\n      </Label>\n\n      <ButtonSubmit>Add contact</ButtonSubmit>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InputFilter = styled.input`\n  font-size: 24px;\n  max-width: 366px;\n  height: 39px;\n\n  padding: 0 15px;\n`;\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 29px;\n\n  color: #38005a;\n\n  margin-bottom: 20px;\n`;\n\nexport const FilterTitle = styled.span`\n  margin-bottom: 14px;\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filterWord: '',\n  },\n  reducers: {\n    addItem(state, action) {\n      state.items = [action.payload, ...state.items];\n    },\n    deleteItem(state, action) {\n      state.items = state.items.filter(\n        contact => contact.id !== action.payload\n      );\n    },\n    filterItems(state, action) {\n      state.filterWord = action.payload;\n    },\n  },\n});\n\nexport const { addItem, deleteItem, filterItems } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { FilterTitle, InputFilter, LabelFilter } from './ContactsFilter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterItems } from 'redux/contacts/contactsSlice';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n  return (\n    <LabelFilter>\n      <FilterTitle>Find contacts by name or number</FilterTitle>\n      <InputFilter\n        type=\"text\"\n        onChange={event => dispatch(filterItems(event.currentTarget.value))}\n      ></InputFilter>\n    </LabelFilter>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.p`\n  font-weight: 400;\n  font-size: 22px;\n  line-height: 27px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 18px;\n  margin-left: 35px;\n\n  &:last-child {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const ContactsList = styled.ul`\n  background: radial-gradient(\n    95.11% 95.11% at 50% 95.11%,\n    #96e6ff 0%,\n    rgba(186, 234, 250, 0.4) 100%\n  );\n  border: 0.8px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  border-radius: 21px;\n\n  max-width: 527px;\n`;\n\nexport const ButtonDelete = styled.button`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n\n  width: 141px;\n  padding-top: 9px;\n  padding-bottom: 14px;\n  margin-left: auto;\n  margin-right: 19px;\n\n  -webkit-text-stroke: 0.6px solid rgba(255, 255, 255, 0.3);\n\n  border-radius: 49px;\n\n  color: #ffffff;\n  background-color: #9567ff;\n\n  border: none;\n\n  &:hover,\n  :focus {\n    background-color: #7d47fc;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { contactsOperations } from 'redux/contacts';\nimport {\n  Contact,\n  ContactsItem,\n  ContactsList,\n  ButtonDelete,\n} from './Contacts.styled';\n\nexport const Contacts = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, phone }) => {\n        return (\n          <ContactsItem key={id}>\n            <Contact>\n              {name}: {phone}\n            </Contact>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => dispatch(contactsOperations.removeContacts(id))}\n            >\n              Delete\n            </ButtonDelete>\n          </ContactsItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsPageSection = styled.section`\n  min-width: 683px;\n\n  &:last-child {\n    margin-left: 100px;\n  }\n`;\n\nexport const ContactsPageMainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 59px;\n\n  color: #38005a;\n\n  -webkit-text-stroke: 1px rgba(255, 255, 255, 0.3);\n  text-shadow: 0px 4px 4px rgba(255, 255, 255, 0.4);\n\n  margin-left: 85px;\n  margin-top: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const ContactsPageTitle = styled.h2`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 44px;\n\n  color: #38005a;\n\n  -webkit-text-stroke: 0.8px solid rgba(255, 255, 255, 0.3);\n  text-shadow: 0px 4px 4px rgba(255, 255, 255, 0.4);\n\n  margin-top: 70px;\n  margin-bottom: 40px;\n`;\n\nexport const DesignDiv = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  width: ${props => props.width};\n  height: ${props => props.height};\n  color: ${props => props.color};\n  opacity: ${props => props.opacity};\n  margin-top: ${props => props.marginTop};\n  margin-left: ${props => props.marginLeft};\n  border-radius: 50%;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  getContact,\n  getFilterWord,\n  IsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { contactsOperations } from 'redux/contacts';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsFilter } from 'components/ContactsFilter';\nimport { Contacts } from 'components/Contacts';\nimport {\n  ContactsPageTitle,\n  ContactsPageMainTitle,\n  ContactsPageSection,\n  DesignDiv,\n  Circle,\n  Loader,\n} from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n  const filterWord = useSelector(getFilterWord);\n  const loading = useSelector(IsLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const getNormilizeContacts = () => {\n    if (filterWord) {\n      const normalizeFilter = filterWord.toLowerCase();\n\n      if (contacts.length !== 0) {\n        return contacts.filter(\n          contact =>\n            contact.name.toLowerCase().includes(normalizeFilter) ||\n            contact.phone.includes(filterWord)\n        );\n      }\n    }\n\n    return contacts;\n  };\n\n  return (\n    <>\n      <ContactsPageSection>\n        <ContactsPageMainTitle>Phonebook</ContactsPageMainTitle>\n        <ContactsForm></ContactsForm>\n        <DesignDiv>\n          <Circle\n            color=\"#f943fd\"\n            width=\"165px\"\n            height=\"165px\"\n            opacity=\"0.3\"\n            marginTop=\"50px\"\n            marginLeft=\"72px\"\n          ></Circle>\n          <Circle\n            color=\"#96e6ff\"\n            width=\"237px\"\n            height=\"237px\"\n            opacity=\"0.3\"\n            marginTop=\"231px\"\n            marginLeft=\"101px\"\n          ></Circle>\n          <Circle\n            color=\"#f943fd\"\n            width=\"205px\"\n            height=\"205px\"\n            opacity=\"0.2\"\n            marginTop=\"187px\"\n            marginLeft=\"390px\"\n          ></Circle>\n        </DesignDiv>\n      </ContactsPageSection>\n\n      <ContactsPageSection>\n        <ContactsPageTitle>Contacts</ContactsPageTitle>\n        {loading && (\n          <Loader role=\"alert\">\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"100\"\n              visible={true}\n            />\n          </Loader>\n        )}\n        <ContactsFilter />\n        {contacts.length !== 0 ? (\n          <Contacts contacts={getNormilizeContacts()} />\n        ) : null}\n      </ContactsPageSection>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContact","state","contacts","entities","getFilterWord","filterWord","IsLoading","isLoading","Form","styled","Label","Input","ButtonSubmit","InputTitle","ContactsForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","handleInputChange","event","currentTarget","value","onSubmit","preventDefault","newContact","phone","find","contact","Notify","contactsOperations","addContacts","type","pattern","title","onChange","required","InputFilter","LabelFilter","FilterTitle","contactsSlice","createSlice","initialState","items","reducers","addItem","action","payload","deleteItem","filter","id","filterItems","actions","ContactsFilter","Contact","ContactsItem","ContactsList","ButtonDelete","Contacts","map","onClick","removeContacts","ContactsPageSection","ContactsPageMainTitle","ContactsPageTitle","DesignDiv","Circle","props","width","height","color","opacity","marginTop","marginLeft","Loader","loading","useEffect","fetchContacts","role","strokeColor","strokeWidth","animationDuration","visible","length","normalizeFilter","toLowerCase","includes","getNormilizeContacts"],"sourceRoot":""}